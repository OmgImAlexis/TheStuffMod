// Date: 21/01/2015 7:52:45 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX
package com.shnupbups.allthethings.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;
import org.lwjgl.opengl.GL11;

public class ModelBear extends ModelBase {
	// fields
	ModelRenderer head;
	ModelRenderer body;
	ModelRenderer leg1;
	ModelRenderer leg2;
	ModelRenderer leg3;
	ModelRenderer leg4;
	ModelRenderer ear1;
	ModelRenderer ear2;
	ModelRenderer nose;

	public ModelBear() {
		textureWidth=64;
		textureHeight=64;
		head=new ModelRenderer(this,0,0);
		head.addBox(-5F,-4F,-8F,10,9,9);
		head.setRotationPoint(0F,12F,-8F);
		head.setTextureSize(64,64);
		head.mirror=true;
		setRotation(head,0F,0F,0F);
		body=new ModelRenderer(this,0,28);
		body.addBox(-6F,-5F,0F,12,10,16);
		body.setRotationPoint(0F,13F,-7F);
		body.setTextureSize(64,64);
		body.mirror=true;
		setRotation(body,0F,0F,0F);
		leg1=new ModelRenderer(this,16,18);
		leg1.addBox(-2F,0F,-2F,4,6,4);
		leg1.setRotationPoint(-3F,18F,7F);
		leg1.setTextureSize(64,64);
		leg1.mirror=true;
		setRotation(leg1,0F,0F,0F);
		leg2=new ModelRenderer(this,0,18);
		leg2.addBox(-2F,0F,-2F,4,6,4);
		leg2.setRotationPoint(3F,18F,7F);
		leg2.setTextureSize(64,64);
		leg2.mirror=true;
		setRotation(leg2,0F,0F,0F);
		leg3=new ModelRenderer(this,32,18);
		leg3.addBox(-2F,0F,-2F,4,6,4);
		leg3.setRotationPoint(-3F,18F,-5F);
		leg3.setTextureSize(64,64);
		leg3.mirror=true;
		setRotation(leg3,0F,0F,0F);
		leg4=new ModelRenderer(this,48,18);
		leg4.addBox(-2F,0F,-2F,4,6,4);
		leg4.setRotationPoint(3F,18F,-5F);
		leg4.setTextureSize(64,64);
		leg4.mirror=true;
		setRotation(leg4,0F,0F,0F);
		ear1=new ModelRenderer(this,38,0);
		ear1.addBox(3F,-7F,-6F,4,4,1);
		ear1.setRotationPoint(0F,12F,-8F);
		ear1.setTextureSize(64,64);
		ear1.mirror=true;
		setRotation(ear1,0F,0F,0F);
		ear2=new ModelRenderer(this,38,5);
		ear2.addBox(-7F,-7F,-6F,4,4,1);
		ear2.setRotationPoint(0F,12F,-8F);
		ear2.setTextureSize(64,64);
		ear2.mirror=true;
		setRotation(ear2,0F,0F,0F);
		nose=new ModelRenderer(this,38,10);
		nose.addBox(-2F,0F,-10F,4,3,2);
		nose.setRotationPoint(0F,12F,-8F);
		nose.setTextureSize(64,64);
		nose.mirror=true;
		setRotation(nose,0F,0F,0F);
	}

	public void render(Entity entity,float f,float f1,float f2,float f3,float f4,float f5) {
		super.render(entity,f,f1,f2,f3,f4,f5);
		setRotationAngles(f,f1,f2,f3,f4,f5,entity);
		if(this.isChild) {
			float f6=2.0F;
			GL11.glPushMatrix();
			GL11.glTranslatef(0.0F,5.0F*f5,4.0F*f5);
			this.head.render(f5);
			this.ear1.render(f5);
			this.ear2.render(f5);
			this.nose.render(f5);
			GL11.glPopMatrix();
			GL11.glPushMatrix();
			GL11.glScalef(1.0F/f6,1.0F/f6,1.0F/f6);
			GL11.glTranslatef(0.0F,24.0F*f5,0.0F);
			this.body.render(f5);
			this.leg1.render(f5);
			this.leg2.render(f5);
			this.leg3.render(f5);
			this.leg4.render(f5);
			GL11.glPopMatrix();
		} else {
			this.head.render(f5);
			this.body.render(f5);
			this.leg1.render(f5);
			this.leg2.render(f5);
			this.leg3.render(f5);
			this.leg4.render(f5);
			this.ear1.render(f5);
			this.ear2.render(f5);
			this.nose.render(f5);
		}
	}

	private void setRotation(ModelRenderer model,float x,float y,float z) {
		model.rotateAngleX=x;
		model.rotateAngleY=y;
		model.rotateAngleZ=z;
	}

	public void setRotationAngles(float f,float f1,float f2,float f3,float f4,float f5,Entity entity) {
		super.setRotationAngles(f,f1,f2,f3,f4,f5,entity);
		float f6=(180F/(float)Math.PI);
		this.head.rotateAngleX=f4/(180F/(float)Math.PI);
		this.head.rotateAngleY=f4/(180F/(float)Math.PI);
		this.ear1.rotateAngleX=f4/(180F/(float)Math.PI);
		this.ear1.rotateAngleY=f4/(180F/(float)Math.PI);
		this.ear2.rotateAngleX=f4/(180F/(float)Math.PI);
		this.ear2.rotateAngleY=f4/(180F/(float)Math.PI);
		this.nose.rotateAngleX=f4/(180F/(float)Math.PI);
		this.nose.rotateAngleY=f4/(180F/(float)Math.PI);
		this.body.rotateAngleX=((float)Math.PI*2F);
		this.leg1.rotateAngleX=MathHelper.cos(f*0.6662F)*1.4F*f1;
		this.leg2.rotateAngleX=MathHelper.cos(f*0.6662F+(float)Math.PI)*1.4F*f1;
		this.leg3.rotateAngleX=MathHelper.cos(f*0.6662F+(float)Math.PI)*1.4F*f1;
		this.leg4.rotateAngleX=MathHelper.cos(f*0.6662F)*1.4F*f1;
	}
}
